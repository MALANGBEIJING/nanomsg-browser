"use strict";function _createForOfIteratorHelper(e){if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(e=_unsupportedIterableToArray(e))){var n=0,r=function(){};return{s:r,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,t,s=!0,a=!1;return{s:function(){o=e[Symbol.iterator]()},n:function(){var e=o.next();return s=e.done,e},e:function(e){a=!0,t=e},f:function(){try{s||null==o.return||o.return()}finally{if(a)throw t}}}}function _unsupportedIterableToArray(e,n){if(e){if("string"==typeof e)return _arrayLikeToArray(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,n):void 0}}function _arrayLikeToArray(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,o=new Array(n);r<n;r++)o[r]=e[r];return o}function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,n,r){return n&&_defineProperties(e.prototype,n),r&&_defineProperties(e,r),e}var nanomsg={debug:!1,reconnectTime:1e3,receiveArrayBuffer:!1,REQ:"rep.sp.nanomsg.org",PAIR:"pair.sp.nanomsg.org",SUB:"pub.sp.nanomsg.org"};nanomsg.Socket=function(){function n(e){_classCallCheck(this,n),this.protocol=e,this.wss=new Map,this.reqIdHeader=null,this.promise=null,this.cbs={data:[],end:[],error:[]},this.protocol==nanomsg.REQ&&(this.reqIdHeader=new Uint8Array(4),window.crypto.getRandomValues(this.reqIdHeader),this.reqIdHeader[0]|=128)}return _createClass(n,[{key:"connect",value:function(r){var o=this;if(!this.wss.has(r))return new Promise(function(e,n){nanomsg.debug&&console.log("nanomsg connect to: "+r);!function n(){try{o.__setupSocketConnection(r,e)}catch(e){console.exception(e),o.wss.delete(r),setTimeout(n,nanomsg.reconnectTime)}}()})}},{key:"__setupSocketConnection",value:function(e,n){var o=this,r=new WebSocket(e,[this.protocol]);r.initialUrl=e,nanomsg.receiveArrayBuffer&&(r.binaryType="arraybuffer"),this.wss.set(e,r),r.onopen=function(){nanomsg.debug&&console.log("nanomsg connected: "+e),n()},r.onmessage=function(e){var n,r=null,r=o.protocol==nanomsg.REQ?e.data.slice(4):e.data;nanomsg.receiveArrayBuffer?o.__resolveNewData(r):((n=new FileReader).onload=function(e){o.__resolveNewData(e.target.result)},n.readAsText(r))},r.onerror=function(n){nanomsg.debug&&console.exception("nanomsg error",n),o.cbs.error.forEach(function(e){return e(n)})},r.onclose=function(){nanomsg.debug&&console.log("nanomsg close: "+r.initialUrl),o.wss.has(r.initialUrl)&&(nanomsg.debug&&console.log("nanomsg reconnect: "+r.initialUrl),o.wss.delete(r.initialUrl),o.connect(r.initialUrl)),o.cbs.end.forEach(function(e){return e(r.initialUrl)})}}},{key:"__resolveNewData",value:function(n){n&&(this.promise&&(this.promise.resolve(n),this.promise=null),this.cbs.data.forEach(function(e){return e(n)}))}},{key:"disconnect",value:function(e){var n=this.wss.get(e);n&&(this.wss.delete(e),n.close())}},{key:"bind",value:function(){throw new Error("WHOAAAA!!! Nice try, but NO, we do not support these!")}},{key:"on",value:function(e,n){var r=this.cbs[e];r&&r.push(n)}},{key:"send",value:function(e){var r=this;if(this.protocol===nanomsg.SUB)throw new Exception("SUB socket can not send");if(this.wss.size<1)throw new Exception("you are not connected to any socket");if(this.protocol===nanomsg.REQ){if("string"==typeof e||e instanceof String)if("undefined"==typeof TextEncoder){for(var n=new ArrayBuffer(e.length),o=new Uint8Array(n),t=0;t<e.length;++t)o[t]=e.charCodeAt(t);e=n}else{e=(new TextEncoder).encode(e)}var s=new Uint8Array(e.length+4);s.set(this.reqIdHeader,0),s.set(e,4),e=s}nanomsg.debug&&console.log("nanomsg send =>",e);var a,i=_createForOfIteratorHelper(this.wss.values());try{for(i.s();!(a=i.n()).done;){var c=a.value;1===c.readyState?c.send(e):1<c.readyState&&(this.wss.has(c.url)&&this.wss.delete(c.url),nanomsg.debug&&console.warn("nanomsg: could not send, because of closed connection ("+c.url+")"))}}catch(e){i.e(e)}finally{i.f()}if(this.protocol===nanomsg.REQ||this.protocol===nanomsg.PAIR)return new Promise(function(e,n){r.promise={resolve:e,reject:n}})}}]),n}(),"undefined"!=typeof exports&&Object.assign(exports,nanomsg);